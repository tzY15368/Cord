syntax = "proto3";

option go_package = "proto";

message GenericArgs {
    enum Method {
        AppendEntries = 0;
        RequestVote = 1;
        InstallSnapshot = 2;
        Start = 3;
    }
    Method method = 1;
    bytes data = 2;
}

message GenericReply {
    bytes data = 1;
}

service GenericService {
    rpc HandleCall (GenericArgs) returns (GenericReply);
}

// message SMOperation {

// }

message RequestInfo {
    int64 clientID = 1;
    int64 requestID = 2;
}

message CmdArgs {
    enum OPType {
        GET = 0;
        PUT = 1;
        APPEND = 2;
        WATCH = 3;
        DELETE = 4;
    }
    OPType opType = 1;
    string opKey = 2;
    string opVal = 3;
    int64 ttl = 4;
}

message ServiceArgs {
    repeated CmdArgs cmds = 1;
    RequestInfo info = 4;
    bool linearizable = 5;// 如果是false，则cmds里任意写都不走raft同步，不保证一致性读
}

service ExternalService {
    rpc HandleRequest (ServiceArgs) returns (ServiceReply);
}

message ServiceReply {
    map<string, string> result = 2;
}

message KVEntry {
    string data = 1;
    int64 ttl = 2;
}

message TempKVStore {
    map<string, KVEntry> data = 1;
}

message AckMap {
    map<int64, int64> ack = 1;
}